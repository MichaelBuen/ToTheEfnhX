<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="34efbb8c-5ce8-48cf-8488-6ea30968dd6b" name="Michael@MICHAEL-PC 2012-06-03 10:02:23" runUser="Michael-PC\Michael" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="7d9e14f4-f525-48ee-bea8-a34d9f4cc18d">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Michael_MICHAEL-PC 2012-06-03 10_02_23">
      <DeploymentItem filename="C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\bin\Release\Ienablemuch.ToTheEfnhX.Memory.dll" />
      <DeploymentItem filename="C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\packages\FluentNHibernate.1.3.0.717\lib\FluentNHibernate.dll" />
      <DeploymentItem filename="C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\packages\Iesi.Collections.3.2.0.4000\lib\Net35\Iesi.Collections.dll" />
      <DeploymentItem filename="C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhx.CommonExtensions\bin\Release\Ienablemuch.ToTheEfnhx.CommonExtensions.dll" />
      <DeploymentItem filename="C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\packages\NHibernate.3.3.0.4000\lib\Net35\NHibernate.dll" />
      <DeploymentItem filename="C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\packages\EntityFramework.4.3.1\lib\net40\EntityFramework.dll" />
      <DeploymentItem filename="C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.NHibernate\bin\Release\Ienablemuch.ToTheEfnhX.NHibernate.dll" />
      <DeploymentItem filename="C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\bin\Release\Ienablemuch.ToTheEfnhX.EntityFramework.dll" />
      <DeploymentItem filename="C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\ToTheEfnhX\bin\Release\Ienablemuch.ToTheEfnhX.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-06-03T10:02:23.9280000+08:00" queuing="2012-06-03T10:02:23.9850000+08:00" start="2012-06-03T10:02:24.0200000+08:00" finish="2012-06-03T10:02:27.6790000+08:00" />
  <ResultSummary outcome="Failed">
    <Counters total="52" executed="52" passed="4" error="0" failed="48" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="Nh_CanHaveIncrementingKey" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="c8ff8ef9-a95a-0779-90f7-6e8188ebefd1">
      <Execution id="c8731347-dba5-4367-9143-26124b4a093c" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_CanHaveIncrementingKey" />
    </UnitTest>
    <UnitTest name="Nh_SessionTransaction_can_detect_its_own_transaction_commitness_only" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="83330a72-51da-0d0d-d2b2-826b2f6cfd00">
      <Execution id="b9096e44-5d85-4667-b587-289b65b81565" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_SessionTransaction_can_detect_its_own_transaction_commitness_only" />
    </UnitTest>
    <UnitTest name="Nh_CanDetectUpdateConflictingDelete" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="5d13769c-6ed9-df33-8e6d-b0cc79c073f2">
      <Execution id="7ac7bde2-5785-4ba0-a986-9c380fe2b034" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_CanDetectUpdateConflictingDelete" />
    </UnitTest>
    <UnitTest name="Nh_Can_Orm_Merge_Can_Create" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="8af4731e-1204-41e4-f479-73db6099844b">
      <Execution id="83dc74d6-bfe2-420f-85c8-46351a6ca4c0" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_Can_Orm_Merge_Can_Create" />
    </UnitTest>
    <UnitTest name="Nh_Can_Orm_do_cascaded_deletions" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="170c0ff1-28bc-09a2-839b-5ab24853aea8">
      <Execution id="0ce68e6d-f8b3-4bd8-8286-b982e9d83e99" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_Can_Orm_do_cascaded_deletions" />
    </UnitTest>
    <UnitTest name="Saving_is_ok" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="5b9ac5c8-7814-fd36-cd57-f0de0de0fae7">
      <Execution id="a0e84db9-9f76-4f27-8136-47befba94752" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Saving_is_ok" />
    </UnitTest>
    <UnitTest name="Fetching_strategies_of_NHibernate_helper_has_no_problem_on_mocked_IQueryable" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="24f780e7-822d-62ed-f13e-e2daddc611e1">
      <Execution id="760ddf6a-1fe8-4ee2-8713-4541fe6667d9" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Fetching_strategies_of_NHibernate_helper_has_no_problem_on_mocked_IQueryable" />
    </UnitTest>
    <UnitTest name="Ef_CanDetectUpdateConflictingUpdate" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="ca3ec696-2df9-55bd-c53c-f732b5c80a68">
      <Execution id="6ec54b20-a6d6-43bb-beda-d7aa1161172d" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_CanDetectUpdateConflictingUpdate" />
    </UnitTest>
    <UnitTest name="Nh_CanUpdate" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="63d9977f-78b2-ba78-f19b-1e84d68eabe8">
      <Execution id="8104bc6a-87f7-4b10-936d-c3095511a05d" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_CanUpdate" />
    </UnitTest>
    <UnitTest name="Memory_CanUpdate" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="f5049a26-85f5-2d61-7d0d-3fe36d498d57">
      <Execution id="d2b1e7e0-b2f5-44c0-a3c1-5578a8310e58" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_CanUpdate" />
    </UnitTest>
    <UnitTest name="Ef_CanDetectDeleteConflictingDelete" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="4bb22a57-9102-06ea-257b-caae673d46d7">
      <Execution id="2c19f581-3ec5-4c9a-8f7d-ce4863302f08" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_CanDetectDeleteConflictingDelete" />
    </UnitTest>
    <UnitTest name="Ef_Can_save_transaction" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="f473cffe-6acb-bc8c-3c44-48f67f9567de">
      <Execution id="51ba12fc-1fc4-4f18-8fcd-eee6921e8a59" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_Can_save_transaction" />
    </UnitTest>
    <UnitTest name="Memory_CanDetectDeleteConflictingDelete" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="d409929f-129a-9686-590d-6472fdfa28e4">
      <Execution id="836a2f3a-a75e-400e-9fd9-97b9123cb742" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_CanDetectDeleteConflictingDelete" />
    </UnitTest>
    <UnitTest name="TestArray" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="e4d36185-e99e-9b3f-8afc-2b7c501afd9a">
      <Execution id="623f89f9-ec29-4e16-85d9-6f6c2f0e183a" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestArray" />
    </UnitTest>
    <UnitTest name="Ef_CanDetectUpdateConflictingDelete" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="cdd1ec05-a33a-edaf-1560-6637f27329d2">
      <Execution id="0b3692e3-9d03-4732-8be1-50edecfcc240" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_CanDetectUpdateConflictingDelete" />
    </UnitTest>
    <UnitTest name="Nh_SessionTransaction_cannot_detect_transaction_commitness" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="dad118fb-1088-58a3-350a-fc5e47173fa9">
      <Execution id="e1d61f99-e838-4783-ac37-0ca33174198d" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_SessionTransaction_cannot_detect_transaction_commitness" />
    </UnitTest>
    <UnitTest name="Ef_Can_Orm_Merge_Can_Create" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="a9ed84c2-917f-5ccb-44a7-7e3cea9cd5e0">
      <Execution id="6dec994b-a05c-4710-b673-a2761cfb0030" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_Can_Orm_Merge_Can_Create" />
    </UnitTest>
    <UnitTest name="Nh_Can_Orm_Merge_Can_Update" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="b9cbda9a-23ca-3458-8bf7-8aa6598f8754">
      <Execution id="99f4b0a1-ef5b-4518-8475-36334ff40126" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_Can_Orm_Merge_Can_Update" />
    </UnitTest>
    <UnitTest name="Memory_CanSaveHeaderDetail" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="c2e9f01d-6387-7f00-c2a6-71385a796942">
      <Execution id="a500051e-4fa0-45bd-8d7a-35e77f065165" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_CanSaveHeaderDetail" />
    </UnitTest>
    <UnitTest name="Ef_CanSave" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="6a52032d-db59-8802-47db-20699e8ef053">
      <Execution id="2eee5ae9-0ff2-421d-b3f4-c1dd413fbe26" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_CanSave" />
    </UnitTest>
    <UnitTest name="Ef_HasRowVersion" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="86150143-fb0b-c807-6c85-448e509331e0">
      <Execution id="c56439ce-b5e1-424f-8dc8-6e9a07142e48" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_HasRowVersion" />
    </UnitTest>
    <UnitTest name="Ef_CanUpdate" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="9ce2ff54-3bea-2c09-7986-c83994c1d685">
      <Execution id="72c3cced-140c-4f46-843c-59f6e64d00d5" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_CanUpdate" />
    </UnitTest>
    <UnitTest name="Nh_CanDetectDeleteConflictingUpdate" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="467d17f0-5ec4-24a5-9089-e15ef18964f7">
      <Execution id="f072b394-5d97-4696-bc03-d9fb94eb6247" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_CanDetectDeleteConflictingUpdate" />
    </UnitTest>
    <UnitTest name="Nh_HasRowVersion" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="919c9ab6-d8de-ff18-95fc-25bc030735bd">
      <Execution id="4a96157a-c457-4689-be29-9f8c70762151" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_HasRowVersion" />
    </UnitTest>
    <UnitTest name="Ef_Can_Orm_do_cascaded_deletions" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="a2256363-4989-1fab-e208-96edc389fe3c">
      <Execution id="6f9c2ea0-570c-4ed9-9143-a0abffbca3c8" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_Can_Orm_do_cascaded_deletions" />
    </UnitTest>
    <UnitTest name="Memory_CanSaveTransaction" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="6b805790-9c4f-2071-6e55-fbbb337c0021">
      <Execution id="13b8405f-7a33-456a-ae36-8fea207d434b" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_CanSaveTransaction" />
    </UnitTest>
    <UnitTest name="Ef_Can_Orm_Merge_Can_Update" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="3a1e9fe6-a4ce-9adb-c086-11052cee98b6">
      <Execution id="df42d520-1fab-4243-817e-5ccc8c85fa23" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_Can_Orm_Merge_Can_Update" />
    </UnitTest>
    <UnitTest name="Ef_CanDelete" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="c3da4334-35ea-a9c1-5cbf-c1daa7323978">
      <Execution id="61e39e24-1f7f-4832-a3f9-b34e23b9dc62" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_CanDelete" />
    </UnitTest>
    <UnitTest name="Ef_Can_queue_changes" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="ffcba511-cdf9-ce52-fd62-900fe7820ecc">
      <Execution id="6ba95d45-8ae7-4e17-9bac-d9ce0d814782" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_Can_queue_changes" />
    </UnitTest>
    <UnitTest name="Fetching_strategies_of_EntityFramework_helper_has_no_problem_on_mocked_IQueryable" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="c8cf96fa-83e0-e026-64af-f003abc95103">
      <Execution id="9e4d4827-e134-4c5a-9a80-8c600f5f3424" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Fetching_strategies_of_EntityFramework_helper_has_no_problem_on_mocked_IQueryable" />
    </UnitTest>
    <UnitTest name="Memory_CanDetectUpdateConflictingDelete" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="314cd11d-882d-0d0a-f196-b0f474ca8700">
      <Execution id="dff6d68d-9c8c-4d36-b644-8cbb7d62f331" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_CanDetectUpdateConflictingDelete" />
    </UnitTest>
    <UnitTest name="Nh_Can_queue_changes" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="8ae0b4b0-ccc4-fc93-736a-72af24764f70">
      <Execution id="53458dc4-1208-4b40-b06c-42f8f1f26588" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_Can_queue_changes" />
    </UnitTest>
    <UnitTest name="Nh_Can_Detect_Transaction_From_Session_Begin_Transaction" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="55b9acb6-c8fa-83e2-62ec-c3bb6a6ae6ad">
      <Execution id="19353573-8740-40ba-baff-a2bf95fa58f2" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_Can_Detect_Transaction_From_Session_Begin_Transaction" />
    </UnitTest>
    <UnitTest name="Nh_CanDetectDeleteConflictingDelete" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="8557e6ab-47d2-b8b1-2926-0bb94a2d505d">
      <Execution id="341335b7-33cd-42d3-88f0-c971e26432c1" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_CanDetectDeleteConflictingDelete" />
    </UnitTest>
    <UnitTest name="Memory_CanSave" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="8c5d9d25-e5b8-63c8-9c42-cebb67787fde">
      <Execution id="e1312dae-0dd8-4be4-afa0-daf14be869f4" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_CanSave" />
    </UnitTest>
    <UnitTest name="Can_do_deep_clone" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="f7d7cfdb-4468-5c56-7540-afe0d55e093a">
      <Execution id="65660cb7-2a2a-4177-8b37-a17100f34143" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Can_do_deep_clone" />
    </UnitTest>
    <UnitTest name="Ef_CanDetectDeleteConflictingUpdate" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="8bf5c997-85a0-f72e-564a-9d66e659263c">
      <Execution id="57d58d42-417c-47fc-80fc-7b18a6727cad" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_CanDetectDeleteConflictingUpdate" />
    </UnitTest>
    <UnitTest name="Memory_CanDelete" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="4eb22f5f-6a6e-dede-7dcd-8a02b2b7eecd">
      <Execution id="411ad65b-f6ee-43a6-86c5-e8ba960e10e4" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_CanDelete" />
    </UnitTest>
    <UnitTest name="Memory_CanHaveIncrementingKey" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="c5220795-75d7-ce76-adb5-6a1d661e1fb0">
      <Execution id="4d838ffb-7cd9-49e3-994f-8ce532ea58f0" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_CanHaveIncrementingKey" />
    </UnitTest>
    <UnitTest name="Memory_CanDetectUpdateConflictingUpdate" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="385b97ed-767a-46eb-ce77-8402dbdb924a">
      <Execution id="3d001186-60b7-47b0-ae88-a715a13f11b7" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_CanDetectUpdateConflictingUpdate" />
    </UnitTest>
    <UnitTest name="Ef_Can_rollback_transaction" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="ef9db0bb-63c6-f8c2-c180-d50d1ce2ca5b">
      <Execution id="4407ca11-0d58-4e5f-97e0-17a6a32a97e8" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_Can_rollback_transaction" />
    </UnitTest>
    <UnitTest name="Nh_Can_save_transaction" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="d14d6d4a-1363-e36e-8cf9-c1c992b9e243">
      <Execution id="d949d491-6763-4681-9e0a-4c111d573c3d" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_Can_save_transaction" />
    </UnitTest>
    <UnitTest name="Nh_CanSaveHeaderDetail" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="f68ad391-23ca-2766-d2b2-8731589ef39b">
      <Execution id="9ca36d3d-9c90-4401-90a0-32d7919f6c1f" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_CanSaveHeaderDetail" />
    </UnitTest>
    <UnitTest name="Nh_Can_rollback_transaction" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="498581d4-9097-59b7-1a75-c07c04a53675">
      <Execution id="53cdb413-5058-4326-8971-25b974e40bd1" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_Can_rollback_transaction" />
    </UnitTest>
    <UnitTest name="Memory_CanDetectDeleteConflictingUpdate" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="9608206a-383a-828f-299c-2c493d95d886">
      <Execution id="0527c7d1-dd43-4238-8887-e26a7d3df86b" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_CanDetectDeleteConflictingUpdate" />
    </UnitTest>
    <UnitTest name="Nh_CanDetectUpdateConflictingUpdate" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="7b0e110e-2e6a-879c-359f-7b225fdba37f">
      <Execution id="eecc787b-b287-4cd6-9a51-afea8266bcd5" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_CanDetectUpdateConflictingUpdate" />
    </UnitTest>
    <UnitTest name="Nh_Can_Detect_Transaction_From_Session_Transaction_Begin" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="35cdc240-50c9-1325-cb02-2e20cf8d0e6b">
      <Execution id="6fc68e38-2244-42a3-86c2-66b22c738817" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_Can_Detect_Transaction_From_Session_Transaction_Begin" />
    </UnitTest>
    <UnitTest name="Ef_CanHaveIncrementingKey" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="e392eca5-e91b-ff0f-619e-8a24d0ecbe68">
      <Execution id="88bd84f9-e812-430e-a17e-1ae5db446673" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_CanHaveIncrementingKey" />
    </UnitTest>
    <UnitTest name="Nh_CanSave" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="c9750689-b2a7-1965-bbd3-0c2f5eda3fb2">
      <Execution id="1a710dc6-712e-4eb4-a06d-d001b18c78b0" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_CanSave" />
    </UnitTest>
    <UnitTest name="Nh_CanDelete" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="f3b46671-4362-7dc3-90a0-0fcbe80e34d8">
      <Execution id="40a27b9b-5c7e-43d3-8c55-3684336a6fbb" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Nh_CanDelete" />
    </UnitTest>
    <UnitTest name="Ef_CanSaveHeaderDetail" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="ecf5b477-cdd8-3508-c195-40a64bc26f00">
      <Execution id="b0d9bba1-ff4f-4077-9fc0-491cedb9722b" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Ef_CanSaveHeaderDetail" />
    </UnitTest>
    <UnitTest name="Memory_HasRowVersion" storage="c:\users\michael\_code\ienablemuch.totheefnhx\testproject\bin\release\testproject.dll" id="0947b967-fff8-9b8d-6688-507250130b49">
      <Execution id="0b355c64-e477-4f96-874d-334a4a1846b3" />
      <TestMethod codeBase="C:/Users/Michael/_CODE/Ienablemuch.ToTheEfnhX/TestProject/bin/Release/TestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject.TestTheIRepository, TestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Memory_HasRowVersion" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="0947b967-fff8-9b8d-6688-507250130b49" executionId="0b355c64-e477-4f96-874d-334a4a1846b3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="170c0ff1-28bc-09a2-839b-5ab24853aea8" executionId="0ce68e6d-f8b3-4bd8-8286-b982e9d83e99" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="24f780e7-822d-62ed-f13e-e2daddc611e1" executionId="760ddf6a-1fe8-4ee2-8713-4541fe6667d9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="314cd11d-882d-0d0a-f196-b0f474ca8700" executionId="dff6d68d-9c8c-4d36-b644-8cbb7d62f331" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="35cdc240-50c9-1325-cb02-2e20cf8d0e6b" executionId="6fc68e38-2244-42a3-86c2-66b22c738817" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="385b97ed-767a-46eb-ce77-8402dbdb924a" executionId="3d001186-60b7-47b0-ae88-a715a13f11b7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3a1e9fe6-a4ce-9adb-c086-11052cee98b6" executionId="df42d520-1fab-4243-817e-5ccc8c85fa23" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="467d17f0-5ec4-24a5-9089-e15ef18964f7" executionId="f072b394-5d97-4696-bc03-d9fb94eb6247" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="498581d4-9097-59b7-1a75-c07c04a53675" executionId="53cdb413-5058-4326-8971-25b974e40bd1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4bb22a57-9102-06ea-257b-caae673d46d7" executionId="2c19f581-3ec5-4c9a-8f7d-ce4863302f08" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4eb22f5f-6a6e-dede-7dcd-8a02b2b7eecd" executionId="411ad65b-f6ee-43a6-86c5-e8ba960e10e4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="55b9acb6-c8fa-83e2-62ec-c3bb6a6ae6ad" executionId="19353573-8740-40ba-baff-a2bf95fa58f2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5b9ac5c8-7814-fd36-cd57-f0de0de0fae7" executionId="a0e84db9-9f76-4f27-8136-47befba94752" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5d13769c-6ed9-df33-8e6d-b0cc79c073f2" executionId="7ac7bde2-5785-4ba0-a986-9c380fe2b034" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="63d9977f-78b2-ba78-f19b-1e84d68eabe8" executionId="8104bc6a-87f7-4b10-936d-c3095511a05d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6a52032d-db59-8802-47db-20699e8ef053" executionId="2eee5ae9-0ff2-421d-b3f4-c1dd413fbe26" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6b805790-9c4f-2071-6e55-fbbb337c0021" executionId="13b8405f-7a33-456a-ae36-8fea207d434b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7b0e110e-2e6a-879c-359f-7b225fdba37f" executionId="eecc787b-b287-4cd6-9a51-afea8266bcd5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="83330a72-51da-0d0d-d2b2-826b2f6cfd00" executionId="b9096e44-5d85-4667-b587-289b65b81565" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8557e6ab-47d2-b8b1-2926-0bb94a2d505d" executionId="341335b7-33cd-42d3-88f0-c971e26432c1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="86150143-fb0b-c807-6c85-448e509331e0" executionId="c56439ce-b5e1-424f-8dc8-6e9a07142e48" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8ae0b4b0-ccc4-fc93-736a-72af24764f70" executionId="53458dc4-1208-4b40-b06c-42f8f1f26588" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8af4731e-1204-41e4-f479-73db6099844b" executionId="83dc74d6-bfe2-420f-85c8-46351a6ca4c0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8bf5c997-85a0-f72e-564a-9d66e659263c" executionId="57d58d42-417c-47fc-80fc-7b18a6727cad" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8c5d9d25-e5b8-63c8-9c42-cebb67787fde" executionId="e1312dae-0dd8-4be4-afa0-daf14be869f4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="919c9ab6-d8de-ff18-95fc-25bc030735bd" executionId="4a96157a-c457-4689-be29-9f8c70762151" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9608206a-383a-828f-299c-2c493d95d886" executionId="0527c7d1-dd43-4238-8887-e26a7d3df86b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9ce2ff54-3bea-2c09-7986-c83994c1d685" executionId="72c3cced-140c-4f46-843c-59f6e64d00d5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a2256363-4989-1fab-e208-96edc389fe3c" executionId="6f9c2ea0-570c-4ed9-9143-a0abffbca3c8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a9ed84c2-917f-5ccb-44a7-7e3cea9cd5e0" executionId="6dec994b-a05c-4710-b673-a2761cfb0030" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b9cbda9a-23ca-3458-8bf7-8aa6598f8754" executionId="99f4b0a1-ef5b-4518-8475-36334ff40126" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c2e9f01d-6387-7f00-c2a6-71385a796942" executionId="a500051e-4fa0-45bd-8d7a-35e77f065165" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c3da4334-35ea-a9c1-5cbf-c1daa7323978" executionId="61e39e24-1f7f-4832-a3f9-b34e23b9dc62" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c5220795-75d7-ce76-adb5-6a1d661e1fb0" executionId="4d838ffb-7cd9-49e3-994f-8ce532ea58f0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c8cf96fa-83e0-e026-64af-f003abc95103" executionId="9e4d4827-e134-4c5a-9a80-8c600f5f3424" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c8ff8ef9-a95a-0779-90f7-6e8188ebefd1" executionId="c8731347-dba5-4367-9143-26124b4a093c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c9750689-b2a7-1965-bbd3-0c2f5eda3fb2" executionId="1a710dc6-712e-4eb4-a06d-d001b18c78b0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca3ec696-2df9-55bd-c53c-f732b5c80a68" executionId="6ec54b20-a6d6-43bb-beda-d7aa1161172d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cdd1ec05-a33a-edaf-1560-6637f27329d2" executionId="0b3692e3-9d03-4732-8be1-50edecfcc240" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d14d6d4a-1363-e36e-8cf9-c1c992b9e243" executionId="d949d491-6763-4681-9e0a-4c111d573c3d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d409929f-129a-9686-590d-6472fdfa28e4" executionId="836a2f3a-a75e-400e-9fd9-97b9123cb742" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dad118fb-1088-58a3-350a-fc5e47173fa9" executionId="e1d61f99-e838-4783-ac37-0ca33174198d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e392eca5-e91b-ff0f-619e-8a24d0ecbe68" executionId="88bd84f9-e812-430e-a17e-1ae5db446673" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e4d36185-e99e-9b3f-8afc-2b7c501afd9a" executionId="623f89f9-ec29-4e16-85d9-6f6c2f0e183a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ecf5b477-cdd8-3508-c195-40a64bc26f00" executionId="b0d9bba1-ff4f-4077-9fc0-491cedb9722b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ef9db0bb-63c6-f8c2-c180-d50d1ce2ca5b" executionId="4407ca11-0d58-4e5f-97e0-17a6a32a97e8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f3b46671-4362-7dc3-90a0-0fcbe80e34d8" executionId="40a27b9b-5c7e-43d3-8c55-3684336a6fbb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f473cffe-6acb-bc8c-3c44-48f67f9567de" executionId="51ba12fc-1fc4-4f18-8fcd-eee6921e8a59" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f5049a26-85f5-2d61-7d0d-3fe36d498d57" executionId="d2b1e7e0-b2f5-44c0-a3c1-5578a8310e58" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f68ad391-23ca-2766-d2b2-8731589ef39b" executionId="9ca36d3d-9c90-4401-90a0-32d7919f6c1f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f7d7cfdb-4468-5c56-7540-afe0d55e093a" executionId="65660cb7-2a2a-4177-8b37-a17100f34143" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ffcba511-cdf9-ce52-fd62-900fe7820ecc" executionId="6ba95d45-8ae7-4e17-9bac-d9ce0d814782" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="0b355c64-e477-4f96-874d-334a4a1846b3" testId="0947b967-fff8-9b8d-6688-507250130b49" testName="Memory_HasRowVersion" computerName="MICHAEL-PC" duration="00:00:00.0520254" startTime="2012-06-03T10:02:24.0310000+08:00" endTime="2012-06-03T10:02:24.3590000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0b355c64-e477-4f96-874d-334a4a1846b3">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_HasRowVersion threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at TestProject.TestTheIRepository.Common_HasRowVersion(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 431
   at TestProject.TestTheIRepository.Memory_HasRowVersion() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 406
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0ce68e6d-f8b3-4bd8-8286-b982e9d83e99" testId="170c0ff1-28bc-09a2-839b-5ab24853aea8" testName="Nh_Can_Orm_do_cascaded_deletions" computerName="MICHAEL-PC" duration="00:00:01.1175513" startTime="2012-06-03T10:02:24.3680000+08:00" endTime="2012-06-03T10:02:25.4910000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0ce68e6d-f8b3-4bd8-8286-b982e9d83e99">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_Can_Orm_do_cascaded_deletions threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_Can_Orm_do_cascaded_deletions() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 998
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="760ddf6a-1fe8-4ee2-8713-4541fe6667d9" testId="24f780e7-822d-62ed-f13e-e2daddc611e1" testName="Fetching_strategies_of_NHibernate_helper_has_no_problem_on_mocked_IQueryable" computerName="MICHAEL-PC" duration="00:00:00.0094741" startTime="2012-06-03T10:02:25.4940000+08:00" endTime="2012-06-03T10:02:25.5080000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="760ddf6a-1fe8-4ee2-8713-4541fe6667d9">
    </UnitTestResult>
    <UnitTestResult executionId="dff6d68d-9c8c-4d36-b644-8cbb7d62f331" testId="314cd11d-882d-0d0a-f196-b0f474ca8700" testName="Memory_CanDetectUpdateConflictingDelete" computerName="MICHAEL-PC" duration="00:00:00.0046810" startTime="2012-06-03T10:02:25.5130000+08:00" endTime="2012-06-03T10:02:25.5210000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dff6d68d-9c8c-4d36-b644-8cbb7d62f331">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_CanDetectUpdateConflictingDelete threw exception System.MissingMethodException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at TestProject.TestTheIRepository.Common_CanDetectUpdateConflictingDelete(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 522
   at TestProject.TestTheIRepository.Memory_CanDetectUpdateConflictingDelete() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 495
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6fc68e38-2244-42a3-86c2-66b22c738817" testId="35cdc240-50c9-1325-cb02-2e20cf8d0e6b" testName="Nh_Can_Detect_Transaction_From_Session_Transaction_Begin" computerName="MICHAEL-PC" duration="00:00:00.0209582" startTime="2012-06-03T10:02:25.5300000+08:00" endTime="2012-06-03T10:02:25.5540000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6fc68e38-2244-42a3-86c2-66b22c738817">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_Can_Detect_Transaction_From_Session_Transaction_Begin threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_Can_Detect_Transaction_From_Session_Transaction_Begin() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1307
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3d001186-60b7-47b0-ae88-a715a13f11b7" testId="385b97ed-767a-46eb-ce77-8402dbdb924a" testName="Memory_CanDetectUpdateConflictingUpdate" computerName="MICHAEL-PC" duration="00:00:00.0022692" startTime="2012-06-03T10:02:25.5580000+08:00" endTime="2012-06-03T10:02:25.5690000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3d001186-60b7-47b0-ae88-a715a13f11b7">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_CanDetectUpdateConflictingUpdate threw exception System.MissingMethodException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at TestProject.TestTheIRepository.Common_CanDetectUpdateConflictingUpdate(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 474
   at TestProject.TestTheIRepository.Memory_CanDetectUpdateConflictingUpdate() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 449
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="df42d520-1fab-4243-817e-5ccc8c85fa23" testId="3a1e9fe6-a4ce-9adb-c086-11052cee98b6" testName="Ef_Can_Orm_Merge_Can_Update" computerName="MICHAEL-PC" duration="00:00:00.0638777" startTime="2012-06-03T10:02:25.5730000+08:00" endTime="2012-06-03T10:02:25.6400000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="df42d520-1fab-4243-817e-5ccc8c85fa23">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_Can_Orm_Merge_Can_Update threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Question.QuestionID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Merge(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 155
   at TestProject.TestTheIRepository.Refactored_Common_Merge_Arrange_Create(IRepository`1 repo) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 847
   at TestProject.TestTheIRepository.Common_Orm_Merge_Can_Update(IRepository`1 repo) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 799
   at TestProject.TestTheIRepository.Ef_Can_Orm_Merge_Can_Update() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 780
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f072b394-5d97-4696-bc03-d9fb94eb6247" testId="467d17f0-5ec4-24a5-9089-e15ef18964f7" testName="Nh_CanDetectDeleteConflictingUpdate" computerName="MICHAEL-PC" duration="00:00:00.0210617" startTime="2012-06-03T10:02:25.6630000+08:00" endTime="2012-06-03T10:02:25.7010000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f072b394-5d97-4696-bc03-d9fb94eb6247">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_CanDetectDeleteConflictingUpdate threw exception FluentNHibernate.Cfg.FluentConfigurationException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_CanDetectDeleteConflictingUpdate() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 561
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="53cdb413-5058-4326-8971-25b974e40bd1" testId="498581d4-9097-59b7-1a75-c07c04a53675" testName="Nh_Can_rollback_transaction" computerName="MICHAEL-PC" duration="00:00:00.0210182" startTime="2012-06-03T10:02:25.7160000+08:00" endTime="2012-06-03T10:02:25.7480000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="53cdb413-5058-4326-8971-25b974e40bd1">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_Can_rollback_transaction threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_Can_rollback_transaction() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1131
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2c19f581-3ec5-4c9a-8f7d-ce4863302f08" testId="4bb22a57-9102-06ea-257b-caae673d46d7" testName="Ef_CanDetectDeleteConflictingDelete" computerName="MICHAEL-PC" duration="00:00:00.0118741" startTime="2012-06-03T10:02:25.7520000+08:00" endTime="2012-06-03T10:02:25.7670000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2c19f581-3ec5-4c9a-8f7d-ce4863302f08">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_CanDetectDeleteConflictingDelete threw exception System.MissingMethodException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Save(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 47
   at TestProject.TestTheIRepository.Common_CanDetectDeleteConflictingDelete(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 620
   at TestProject.TestTheIRepository.Ef_CanDetectDeleteConflictingDelete() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 602
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="411ad65b-f6ee-43a6-86c5-e8ba960e10e4" testId="4eb22f5f-6a6e-dede-7dcd-8a02b2b7eecd" testName="Memory_CanDelete" computerName="MICHAEL-PC" duration="00:00:00.0039795" startTime="2012-06-03T10:02:25.7750000+08:00" endTime="2012-06-03T10:02:25.7830000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="411ad65b-f6ee-43a6-86c5-e8ba960e10e4">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_CanDelete threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at TestProject.TestTheIRepository.Common_CanDelete(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 280
   at TestProject.TestTheIRepository.Memory_CanDelete() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 259
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="19353573-8740-40ba-baff-a2bf95fa58f2" testId="55b9acb6-c8fa-83e2-62ec-c3bb6a6ae6ad" testName="Nh_Can_Detect_Transaction_From_Session_Begin_Transaction" computerName="MICHAEL-PC" duration="00:00:00.0198509" startTime="2012-06-03T10:02:25.7920000+08:00" endTime="2012-06-03T10:02:25.8150000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="19353573-8740-40ba-baff-a2bf95fa58f2">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_Can_Detect_Transaction_From_Session_Begin_Transaction threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_Can_Detect_Transaction_From_Session_Begin_Transaction() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1239
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a0e84db9-9f76-4f27-8136-47befba94752" testId="5b9ac5c8-7814-fd36-cd57-f0de0de0fae7" testName="Saving_is_ok" computerName="MICHAEL-PC" duration="00:00:00.0039091" startTime="2012-06-03T10:02:25.8220000+08:00" endTime="2012-06-03T10:02:25.8300000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a0e84db9-9f76-4f27-8136-47befba94752">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Saving_is_ok threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at TestProject.TestTheIRepository.Saving_is_ok() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 231
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7ac7bde2-5785-4ba0-a986-9c380fe2b034" testId="5d13769c-6ed9-df33-8e6d-b0cc79c073f2" testName="Nh_CanDetectUpdateConflictingDelete" computerName="MICHAEL-PC" duration="00:00:00.0209791" startTime="2012-06-03T10:02:25.8370000+08:00" endTime="2012-06-03T10:02:25.8610000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7ac7bde2-5785-4ba0-a986-9c380fe2b034">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_CanDetectUpdateConflictingDelete threw exception FluentNHibernate.Cfg.FluentConfigurationException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_CanDetectUpdateConflictingDelete() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 510
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8104bc6a-87f7-4b10-936d-c3095511a05d" testId="63d9977f-78b2-ba78-f19b-1e84d68eabe8" testName="Nh_CanUpdate" computerName="MICHAEL-PC" duration="00:00:00.0221478" startTime="2012-06-03T10:02:25.8690000+08:00" endTime="2012-06-03T10:02:25.8960000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8104bc6a-87f7-4b10-936d-c3095511a05d">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_CanUpdate threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_CanUpdate() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 312
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2eee5ae9-0ff2-421d-b3f4-c1dd413fbe26" testId="6a52032d-db59-8802-47db-20699e8ef053" testName="Ef_CanSave" computerName="MICHAEL-PC" duration="00:00:00.0050837" startTime="2012-06-03T10:02:25.9020000+08:00" endTime="2012-06-03T10:02:25.9110000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2eee5ae9-0ff2-421d-b3f4-c1dd413fbe26">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_CanSave threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Save(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 47
   at TestProject.TestTheIRepository.Common_CanSave(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 106
   at TestProject.TestTheIRepository.Ef_CanSave() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 89
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="13b8405f-7a33-456a-ae36-8fea207d434b" testId="6b805790-9c4f-2071-6e55-fbbb337c0021" testName="Memory_CanSaveTransaction" computerName="MICHAEL-PC" duration="00:00:00.0049111" startTime="2012-06-03T10:02:25.9180000+08:00" endTime="2012-06-03T10:02:25.9270000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="13b8405f-7a33-456a-ae36-8fea207d434b">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_CanSaveTransaction threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at TestProject.TestTheIRepository.Common_Can_save_transaction(ITransactionBoundFactory xf, IRepository`1 p, IRepository`1 q) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1225
   at TestProject.TestTheIRepository.Memory_CanSaveTransaction() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1217
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eecc787b-b287-4cd6-9a51-afea8266bcd5" testId="7b0e110e-2e6a-879c-359f-7b225fdba37f" testName="Nh_CanDetectUpdateConflictingUpdate" computerName="MICHAEL-PC" duration="00:00:00.0214195" startTime="2012-06-03T10:02:25.9350000+08:00" endTime="2012-06-03T10:02:25.9600000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eecc787b-b287-4cd6-9a51-afea8266bcd5">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_CanDetectUpdateConflictingUpdate threw exception FluentNHibernate.Cfg.FluentConfigurationException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_CanDetectUpdateConflictingUpdate() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 464
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b9096e44-5d85-4667-b587-289b65b81565" testId="83330a72-51da-0d0d-d2b2-826b2f6cfd00" testName="Nh_SessionTransaction_can_detect_its_own_transaction_commitness_only" computerName="MICHAEL-PC" duration="00:00:00.0197905" startTime="2012-06-03T10:02:25.9680000+08:00" endTime="2012-06-03T10:02:25.9910000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b9096e44-5d85-4667-b587-289b65b81565">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_SessionTransaction_can_detect_its_own_transaction_commitness_only threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_SessionTransaction_can_detect_its_own_transaction_commitness_only() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1292
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="341335b7-33cd-42d3-88f0-c971e26432c1" testId="8557e6ab-47d2-b8b1-2926-0bb94a2d505d" testName="Nh_CanDetectDeleteConflictingDelete" computerName="MICHAEL-PC" duration="00:00:00.0241736" startTime="2012-06-03T10:02:26.0000000+08:00" endTime="2012-06-03T10:02:26.0280000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="341335b7-33cd-42d3-88f0-c971e26432c1">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_CanDetectDeleteConflictingDelete threw exception FluentNHibernate.Cfg.FluentConfigurationException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_CanDetectDeleteConflictingDelete() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 609
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c56439ce-b5e1-424f-8dc8-6e9a07142e48" testId="86150143-fb0b-c807-6c85-448e509331e0" testName="Ef_HasRowVersion" computerName="MICHAEL-PC" duration="00:00:00.0047354" startTime="2012-06-03T10:02:26.0330000+08:00" endTime="2012-06-03T10:02:26.0430000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c56439ce-b5e1-424f-8dc8-6e9a07142e48">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_HasRowVersion threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Save(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 47
   at TestProject.TestTheIRepository.Common_HasRowVersion(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 431
   at TestProject.TestTheIRepository.Ef_HasRowVersion() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 413
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="53458dc4-1208-4b40-b06c-42f8f1f26588" testId="8ae0b4b0-ccc4-fc93-736a-72af24764f70" testName="Nh_Can_queue_changes" computerName="MICHAEL-PC" duration="00:00:00.0227666" startTime="2012-06-03T10:02:26.0530000+08:00" endTime="2012-06-03T10:02:26.0790000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="53458dc4-1208-4b40-b06c-42f8f1f26588">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_Can_queue_changes threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_Can_queue_changes() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 881
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="83dc74d6-bfe2-420f-85c8-46351a6ca4c0" testId="8af4731e-1204-41e4-f479-73db6099844b" testName="Nh_Can_Orm_Merge_Can_Create" computerName="MICHAEL-PC" duration="00:00:00.0254998" startTime="2012-06-03T10:02:26.0820000+08:00" endTime="2012-06-03T10:02:26.1130000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="83dc74d6-bfe2-420f-85c8-46351a6ca4c0">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_Can_Orm_Merge_Can_Create threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_Can_Orm_Merge_Can_Create() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 719
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="57d58d42-417c-47fc-80fc-7b18a6727cad" testId="8bf5c997-85a0-f72e-564a-9d66e659263c" testName="Ef_CanDetectDeleteConflictingUpdate" computerName="MICHAEL-PC" duration="00:00:00.0049534" startTime="2012-06-03T10:02:26.1210000+08:00" endTime="2012-06-03T10:02:26.1300000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="57d58d42-417c-47fc-80fc-7b18a6727cad">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_CanDetectDeleteConflictingUpdate threw exception System.MissingMethodException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Save(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 47
   at TestProject.TestTheIRepository.Common_CanDetectDeleteConflictingUpdate(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 572
   at TestProject.TestTheIRepository.Ef_CanDetectDeleteConflictingUpdate() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 554
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e1312dae-0dd8-4be4-afa0-daf14be869f4" testId="8c5d9d25-e5b8-63c8-9c42-cebb67787fde" testName="Memory_CanSave" computerName="MICHAEL-PC" duration="00:00:00.0021525" startTime="2012-06-03T10:02:26.1390000+08:00" endTime="2012-06-03T10:02:26.1460000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e1312dae-0dd8-4be4-afa0-daf14be869f4">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_CanSave threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at TestProject.TestTheIRepository.Common_CanSave(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 106
   at TestProject.TestTheIRepository.Memory_CanSave() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 82
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4a96157a-c457-4689-be29-9f8c70762151" testId="919c9ab6-d8de-ff18-95fc-25bc030735bd" testName="Nh_HasRowVersion" computerName="MICHAEL-PC" duration="00:00:00.0216865" startTime="2012-06-03T10:02:26.1520000+08:00" endTime="2012-06-03T10:02:26.1770000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4a96157a-c457-4689-be29-9f8c70762151">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_HasRowVersion threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_HasRowVersion() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 419
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0527c7d1-dd43-4238-8887-e26a7d3df86b" testId="9608206a-383a-828f-299c-2c493d95d886" testName="Memory_CanDetectDeleteConflictingUpdate" computerName="MICHAEL-PC" duration="00:00:00.0017321" startTime="2012-06-03T10:02:26.1840000+08:00" endTime="2012-06-03T10:02:26.1900000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0527c7d1-dd43-4238-8887-e26a7d3df86b">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_CanDetectDeleteConflictingUpdate threw exception System.MissingMethodException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at TestProject.TestTheIRepository.Common_CanDetectDeleteConflictingUpdate(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 572
   at TestProject.TestTheIRepository.Memory_CanDetectDeleteConflictingUpdate() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 546
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="72c3cced-140c-4f46-843c-59f6e64d00d5" testId="9ce2ff54-3bea-2c09-7986-c83994c1d685" testName="Ef_CanUpdate" computerName="MICHAEL-PC" duration="00:00:00.0076821" startTime="2012-06-03T10:02:26.1940000+08:00" endTime="2012-06-03T10:02:26.2090000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="72c3cced-140c-4f46-843c-59f6e64d00d5">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_CanUpdate threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Merge(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 155
   at TestProject.TestTheIRepository.Common_CanUpdate(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 342
   at TestProject.TestTheIRepository.Ef_CanUpdate() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 306
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6f9c2ea0-570c-4ed9-9143-a0abffbca3c8" testId="a2256363-4989-1fab-e208-96edc389fe3c" testName="Ef_Can_Orm_do_cascaded_deletions" computerName="MICHAEL-PC" duration="00:00:00.0041815" startTime="2012-06-03T10:02:26.2140000+08:00" endTime="2012-06-03T10:02:26.2280000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6f9c2ea0-570c-4ed9-9143-a0abffbca3c8">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_Can_Orm_do_cascaded_deletions threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Question.QuestionID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Merge(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 155
   at TestProject.TestTheIRepository.Refactored_Common_Merge_Arrange_Create(IRepository`1 repo) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 847
   at TestProject.TestTheIRepository.Common_Can_Orm_do_cascaded_deletions(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1012
   at TestProject.TestTheIRepository.Ef_Can_Orm_do_cascaded_deletions() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1007
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6dec994b-a05c-4710-b673-a2761cfb0030" testId="a9ed84c2-917f-5ccb-44a7-7e3cea9cd5e0" testName="Ef_Can_Orm_Merge_Can_Create" computerName="MICHAEL-PC" duration="00:00:00.0095971" startTime="2012-06-03T10:02:26.2320000+08:00" endTime="2012-06-03T10:02:26.2480000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6dec994b-a05c-4710-b673-a2761cfb0030">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_Can_Orm_Merge_Can_Create threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Question.QuestionID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Merge(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 155
   at TestProject.TestTheIRepository.Refactored_Common_Merge_Arrange_Create(IRepository`1 repo) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 847
   at TestProject.TestTheIRepository.Common_Can_Orm_Merge_Can_Create(IRepository`1 repo) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 728
   at TestProject.TestTheIRepository.Ef_Can_Orm_Merge_Can_Create() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 708
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="99f4b0a1-ef5b-4518-8475-36334ff40126" testId="b9cbda9a-23ca-3458-8bf7-8aa6598f8754" testName="Nh_Can_Orm_Merge_Can_Update" computerName="MICHAEL-PC" duration="00:00:00.0224147" startTime="2012-06-03T10:02:26.2510000+08:00" endTime="2012-06-03T10:02:26.2810000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="99f4b0a1-ef5b-4518-8475-36334ff40126">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_Can_Orm_Merge_Can_Update threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_Can_Orm_Merge_Can_Update() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 788
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a500051e-4fa0-45bd-8d7a-35e77f065165" testId="c2e9f01d-6387-7f00-c2a6-71385a796942" testName="Memory_CanSaveHeaderDetail" computerName="MICHAEL-PC" duration="00:00:00.0049257" startTime="2012-06-03T10:02:26.2920000+08:00" endTime="2012-06-03T10:02:26.3030000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a500051e-4fa0-45bd-8d7a-35e77f065165">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_CanSaveHeaderDetail threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Merge(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 197
   at TestProject.TestTheIRepository.Common_CanSaveHeaderDetail(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 171
   at TestProject.TestTheIRepository.Memory_CanSaveHeaderDetail() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 144
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="61e39e24-1f7f-4832-a3f9-b34e23b9dc62" testId="c3da4334-35ea-a9c1-5cbf-c1daa7323978" testName="Ef_CanDelete" computerName="MICHAEL-PC" duration="00:00:00.0041207" startTime="2012-06-03T10:02:26.3060000+08:00" endTime="2012-06-03T10:02:26.3180000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="61e39e24-1f7f-4832-a3f9-b34e23b9dc62">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_CanDelete threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Save(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 47
   at TestProject.TestTheIRepository.Common_CanDelete(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 280
   at TestProject.TestTheIRepository.Ef_CanDelete() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 268
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4d838ffb-7cd9-49e3-994f-8ce532ea58f0" testId="c5220795-75d7-ce76-adb5-6a1d661e1fb0" testName="Memory_CanHaveIncrementingKey" computerName="MICHAEL-PC" duration="00:00:00.0026533" startTime="2012-06-03T10:02:26.3260000+08:00" endTime="2012-06-03T10:02:26.3350000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4d838ffb-7cd9-49e3-994f-8ce532ea58f0">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_CanHaveIncrementingKey threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at TestProject.TestTheIRepository.Common_CanHaveIncrementingKey(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 674
   at TestProject.TestTheIRepository.Memory_CanHaveIncrementingKey() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 639
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9e4d4827-e134-4c5a-9a80-8c600f5f3424" testId="c8cf96fa-83e0-e026-64af-f003abc95103" testName="Fetching_strategies_of_EntityFramework_helper_has_no_problem_on_mocked_IQueryable" computerName="MICHAEL-PC" duration="00:00:00.0019790" startTime="2012-06-03T10:02:26.3380000+08:00" endTime="2012-06-03T10:02:26.3470000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9e4d4827-e134-4c5a-9a80-8c600f5f3424">
    </UnitTestResult>
    <UnitTestResult executionId="c8731347-dba5-4367-9143-26124b4a093c" testId="c8ff8ef9-a95a-0779-90f7-6e8188ebefd1" testName="Nh_CanHaveIncrementingKey" computerName="MICHAEL-PC" duration="00:00:00.0210073" startTime="2012-06-03T10:02:26.3500000+08:00" endTime="2012-06-03T10:02:26.3740000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c8731347-dba5-4367-9143-26124b4a093c">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_CanHaveIncrementingKey threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_CanHaveIncrementingKey() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 652
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1a710dc6-712e-4eb4-a06d-d001b18c78b0" testId="c9750689-b2a7-1965-bbd3-0c2f5eda3fb2" testName="Nh_CanSave" computerName="MICHAEL-PC" duration="00:00:00.0547645" startTime="2012-06-03T10:02:26.3780000+08:00" endTime="2012-06-03T10:02:26.4360000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1a710dc6-712e-4eb4-a06d-d001b18c78b0">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_CanSave threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_CanSave() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 95
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6ec54b20-a6d6-43bb-beda-d7aa1161172d" testId="ca3ec696-2df9-55bd-c53c-f732b5c80a68" testName="Ef_CanDetectUpdateConflictingUpdate" computerName="MICHAEL-PC" duration="00:00:00.0059009" startTime="2012-06-03T10:02:26.4380000+08:00" endTime="2012-06-03T10:02:26.4490000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6ec54b20-a6d6-43bb-beda-d7aa1161172d">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_CanDetectUpdateConflictingUpdate threw exception System.MissingMethodException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Save(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 47
   at TestProject.TestTheIRepository.Common_CanDetectUpdateConflictingUpdate(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 474
   at TestProject.TestTheIRepository.Ef_CanDetectUpdateConflictingUpdate() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 457
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0b3692e3-9d03-4732-8be1-50edecfcc240" testId="cdd1ec05-a33a-edaf-1560-6637f27329d2" testName="Ef_CanDetectUpdateConflictingDelete" computerName="MICHAEL-PC" duration="00:00:00.0033661" startTime="2012-06-03T10:02:26.4560000+08:00" endTime="2012-06-03T10:02:26.4630000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0b3692e3-9d03-4732-8be1-50edecfcc240">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_CanDetectUpdateConflictingDelete threw exception System.MissingMethodException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Save(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 47
   at TestProject.TestTheIRepository.Common_CanDetectUpdateConflictingDelete(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 522
   at TestProject.TestTheIRepository.Ef_CanDetectUpdateConflictingDelete() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 503
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d949d491-6763-4681-9e0a-4c111d573c3d" testId="d14d6d4a-1363-e36e-8cf9-c1c992b9e243" testName="Nh_Can_save_transaction" computerName="MICHAEL-PC" duration="00:00:00.0217496" startTime="2012-06-03T10:02:26.4700000+08:00" endTime="2012-06-03T10:02:26.4960000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d949d491-6763-4681-9e0a-4c111d573c3d">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_Can_save_transaction threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_Can_save_transaction() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1196
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="836a2f3a-a75e-400e-9fd9-97b9123cb742" testId="d409929f-129a-9686-590d-6472fdfa28e4" testName="Memory_CanDetectDeleteConflictingDelete" computerName="MICHAEL-PC" duration="00:00:00.0017452" startTime="2012-06-03T10:02:26.5040000+08:00" endTime="2012-06-03T10:02:26.5090000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="836a2f3a-a75e-400e-9fd9-97b9123cb742">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_CanDetectDeleteConflictingDelete threw exception System.MissingMethodException, but exception Ienablemuch.ToTheEfnhX.DbChangesConcurrencyException was expected. Exception message: System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at TestProject.TestTheIRepository.Common_CanDetectDeleteConflictingDelete(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 620
   at TestProject.TestTheIRepository.Memory_CanDetectDeleteConflictingDelete() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 592
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e1d61f99-e838-4783-ac37-0ca33174198d" testId="dad118fb-1088-58a3-350a-fc5e47173fa9" testName="Nh_SessionTransaction_cannot_detect_transaction_commitness" computerName="MICHAEL-PC" duration="00:00:00.0208947" startTime="2012-06-03T10:02:26.5130000+08:00" endTime="2012-06-03T10:02:26.5370000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e1d61f99-e838-4783-ac37-0ca33174198d">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_SessionTransaction_cannot_detect_transaction_commitness threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_SessionTransaction_cannot_detect_transaction_commitness() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1267
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="88bd84f9-e812-430e-a17e-1ae5db446673" testId="e392eca5-e91b-ff0f-619e-8a24d0ecbe68" testName="Ef_CanHaveIncrementingKey" computerName="MICHAEL-PC" duration="00:00:00.0033084" startTime="2012-06-03T10:02:26.5430000+08:00" endTime="2012-06-03T10:02:26.5500000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="88bd84f9-e812-430e-a17e-1ae5db446673">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_CanHaveIncrementingKey threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Save(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 47
   at TestProject.TestTheIRepository.Common_CanHaveIncrementingKey(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 674
   at TestProject.TestTheIRepository.Ef_CanHaveIncrementingKey() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 646
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="623f89f9-ec29-4e16-85d9-6f6c2f0e183a" testId="e4d36185-e99e-9b3f-8afc-2b7c501afd9a" testName="TestArray" computerName="MICHAEL-PC" duration="00:00:00.0002029" startTime="2012-06-03T10:02:26.5570000+08:00" endTime="2012-06-03T10:02:26.5640000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="623f89f9-ec29-4e16-85d9-6f6c2f0e183a">
    </UnitTestResult>
    <UnitTestResult executionId="b0d9bba1-ff4f-4077-9fc0-491cedb9722b" testId="ecf5b477-cdd8-3508-c195-40a64bc26f00" testName="Ef_CanSaveHeaderDetail" computerName="MICHAEL-PC" duration="00:00:00.0035236" startTime="2012-06-03T10:02:26.5670000+08:00" endTime="2012-06-03T10:02:26.5740000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b0d9bba1-ff4f-4077-9fc0-491cedb9722b">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_CanSaveHeaderDetail threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Merge(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 155
   at TestProject.TestTheIRepository.Common_CanSaveHeaderDetail(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 171
   at TestProject.TestTheIRepository.Ef_CanSaveHeaderDetail() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 133
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4407ca11-0d58-4e5f-97e0-17a6a32a97e8" testId="ef9db0bb-63c6-f8c2-c180-d50d1ce2ca5b" testName="Ef_Can_rollback_transaction" computerName="MICHAEL-PC" duration="00:00:00.9366820" startTime="2012-06-03T10:02:26.5830000+08:00" endTime="2012-06-03T10:02:27.5230000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4407ca11-0d58-4e5f-97e0-17a6a32a97e8">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_Can_rollback_transaction threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Save(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 47
   at TestProject.TestTheIRepository.Common_Can_rollback_transaction(ITransactionBoundFactory xf, IRepository`1 p, IRepository`1 q) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1150
   at TestProject.TestTheIRepository.Ef_Can_rollback_transaction() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1123
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="40a27b9b-5c7e-43d3-8c55-3684336a6fbb" testId="f3b46671-4362-7dc3-90a0-0fcbe80e34d8" testName="Nh_CanDelete" computerName="MICHAEL-PC" duration="00:00:00.0210745" startTime="2012-06-03T10:02:27.5280000+08:00" endTime="2012-06-03T10:02:27.5580000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="40a27b9b-5c7e-43d3-8c55-3684336a6fbb">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_CanDelete threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_CanDelete() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 274
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="51ba12fc-1fc4-4f18-8fcd-eee6921e8a59" testId="f473cffe-6acb-bc8c-3c44-48f67f9567de" testName="Ef_Can_save_transaction" computerName="MICHAEL-PC" duration="00:00:00.0053647" startTime="2012-06-03T10:02:27.5660000+08:00" endTime="2012-06-03T10:02:27.5740000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="51ba12fc-1fc4-4f18-8fcd-eee6921e8a59">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_Can_save_transaction threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Save(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 47
   at TestProject.TestTheIRepository.Common_Can_save_transaction(ITransactionBoundFactory xf, IRepository`1 p, IRepository`1 q) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1225
   at TestProject.TestTheIRepository.Ef_Can_save_transaction() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 1188
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d2b1e7e0-b2f5-44c0-a3c1-5578a8310e58" testId="f5049a26-85f5-2d61-7d0d-3fe36d498d57" testName="Memory_CanUpdate" computerName="MICHAEL-PC" duration="00:00:00.0048526" startTime="2012-06-03T10:02:27.5800000+08:00" endTime="2012-06-03T10:02:27.5890000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d2b1e7e0-b2f5-44c0-a3c1-5578a8310e58">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Memory_CanUpdate threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Product.ProductID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Save(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 41
   at Ienablemuch.ToTheEfnhX.Memory.MemoryRepository`1.Merge(Ent ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.Memory\MemoryRepository.cs:line 197
   at TestProject.TestTheIRepository.Common_CanUpdate(IRepository`1 db) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 342
   at TestProject.TestTheIRepository.Memory_CanUpdate() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 299
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9ca36d3d-9c90-4401-90a0-32d7919f6c1f" testId="f68ad391-23ca-2766-d2b2-8731589ef39b" testName="Nh_CanSaveHeaderDetail" computerName="MICHAEL-PC" duration="00:00:00.0203780" startTime="2012-06-03T10:02:27.5990000+08:00" endTime="2012-06-03T10:02:27.6230000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ca36d3d-9c90-4401-90a0-32d7919f6c1f">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Nh_CanSaveHeaderDetail threw exception: 
FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Visitors.ValidationException: The entity 'Answer' doesn't have an Id mapped. Use the Id method to map your identity property. For example: Id(x =&gt; x.Id).</Message>
          <StackTrace>    at FluentNHibernate.Visitors.ValidationVisitor.ProcessClass(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\ValidationVisitor.cs:line 20
   at FluentNHibernate.MappingModel.ClassBased.ClassMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\ClassBased\ClassMapping.cs:line 78
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(ClassMapping classMapping) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 89
   at FluentNHibernate.MappingModel.HibernateMapping.AcceptVisitor(IMappingModelVisitor visitor) in d:\Builds\FluentNH\src\FluentNHibernate\MappingModel\HibernateMapping.cs:line 37
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.&lt;Visit&gt;b__0(HibernateMapping x) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.Utils.CollectionExtensions.Each[T](IEnumerable`1 enumerable, Action`1 each) in d:\Builds\FluentNH\src\FluentNHibernate\Utils\CollectionExtensions.cs:line 15
   at FluentNHibernate.Visitors.DefaultMappingModelVisitor.Visit(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\Visitors\DefaultMappingModelVisitor.cs:line 79
   at FluentNHibernate.PersistenceModel.ApplyVisitors(IEnumerable`1 mappings) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 214
   at FluentNHibernate.PersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 169
   at FluentNHibernate.Automapping.AutoPersistenceModel.BuildMappings() in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 134
   at FluentNHibernate.PersistenceModel.EnsureMappingsBuilt() in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 221
   at FluentNHibernate.PersistenceModel.Configure(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\PersistenceModel.cs:line 277
   at FluentNHibernate.Automapping.AutoPersistenceModel.Configure(Configuration configuration) in d:\Builds\FluentNH\src\FluentNHibernate\Automapping\AutoPersistenceModel.cs:line 201
   at FluentNHibernate.Cfg.AutoMappingsContainer.Apply(Configuration cfg, PersistenceModel model) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\AutoMappingsContainer.cs:line 86
   at FluentNHibernate.Cfg.MappingConfiguration.Apply(Configuration cfg) in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\MappingConfiguration.cs:line 80
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 249
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 264
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 230
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in d:\Builds\FluentNH\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 235
   at TestProject.NhModelsMapper.GetSessionFactory(String connectionString) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\NhDbMapper.cs:line 63
   at TestProject.TestTheIRepository.Nh_CanSaveHeaderDetail() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 122
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="65660cb7-2a2a-4177-8b37-a17100f34143" testId="f7d7cfdb-4468-5c56-7540-afe0d55e093a" testName="Can_do_deep_clone" computerName="MICHAEL-PC" duration="00:00:00.0022279" startTime="2012-06-03T10:02:27.6300000+08:00" endTime="2012-06-03T10:02:27.6360000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="65660cb7-2a2a-4177-8b37-a17100f34143">
    </UnitTestResult>
    <UnitTestResult executionId="6ba95d45-8ae7-4e17-9bac-d9ce0d814782" testId="ffcba511-cdf9-ce52-fd62-900fe7820ecc" testName="Ef_Can_queue_changes" computerName="MICHAEL-PC" duration="00:00:00.0050174" startTime="2012-06-03T10:02:27.6420000+08:00" endTime="2012-06-03T10:02:27.6510000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6ba95d45-8ae7-4e17-9bac-d9ce0d814782">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject.TestTheIRepository.Ef_Can_queue_changes threw exception: 
System.MissingMethodException: Method 'TestProject.SampleModel.Question.QuestionID' not found.</Message>
          <StackTrace>    at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
   at Ienablemuch.ToTheEfnhX.EntityFramework.EfRepository`1.Merge(TEnt ent, Byte[] version) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\Ienablemuch.ToTheEfnhX.EntityFramework\EfRepository.cs:line 155
   at TestProject.TestTheIRepository.Refactored_Common_Merge_Arrange_Create(IRepository`1 repo) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 847
   at TestProject.TestTheIRepository.Common_Can_queue_changes(IRepository`1 repo) in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 898
   at TestProject.TestTheIRepository.Ef_Can_queue_changes() in C:\Users\Michael\_CODE\Ienablemuch.ToTheEfnhX\TestProject\TestTheIRepository.cs:line 891
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>